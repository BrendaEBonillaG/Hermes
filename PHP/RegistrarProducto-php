<?php
session_start();
require 'config.php'; // Tu archivo de conexi칩n existente

header('Content-Type: application/json');

// Validar sesi칩n
if (!isset($_SESSION['id_usuario'])) {
    echo json_encode(['success' => false, 'error' => 'No hay sesi칩n activa']);
    exit;
}

// Validar datos del formulario
$requiredFields = ['nombre', 'descripcion', 'precio', 'cantidad', 'categoria'];
foreach ($requiredFields as $field) {
    if (empty($_POST[$field])) {
        echo json_encode(['success' => false, 'error' => "El campo $field es requerido"]);
        exit;
    }
}

try {
    // Preparar datos
    $nombre = trim($_POST['nombre']);
    $descripcion = trim($_POST['descripcion']);
    $precio = floatval($_POST['precio']);
    $cantidad = intval($_POST['cantidad']);
    $categoria = trim($_POST['categoria']);
    $aceptaCotizaciones = isset($_POST['acepta_cotizaciones']) ? 1 : 0;
    $idVendedor = $_SESSION['id_usuario'];

    // Llamar al procedimiento almacenado
    $stmt = $pdo->prepare("CALL sp_registrar_producto(:nombre, :descripcion, :precio, :cantidad, :categoria, :id_vendedor, :acepta_cotizaciones, @id_producto, @mensaje)");
    
    $stmt->bindParam(':nombre', $nombre, PDO::PARAM_STR);
    $stmt->bindParam(':descripcion', $descripcion, PDO::PARAM_STR);
    $stmt->bindParam(':precio', $precio, PDO::PARAM_STR);
    $stmt->bindParam(':cantidad', $cantidad, PDO::PARAM_INT);
    $stmt->bindParam(':categoria', $categoria, PDO::PARAM_STR);
    $stmt->bindParam(':id_vendedor', $idVendedor, PDO::PARAM_INT);
    $stmt->bindParam(':acepta_cotizaciones', $aceptaCotizaciones, PDO::PARAM_BOOL);
    
    $stmt->execute();

    // Obtener resultados del procedimiento
    $result = $pdo->query("SELECT @id_producto AS id_producto, @mensaje AS mensaje")->fetch(PDO::FETCH_ASSOC);
    
    if (empty($result['id_producto'])) {
        throw new Exception($result['mensaje'] ?? 'Error al registrar el producto');
    }

    $idProducto = $result['id_producto'];
    
    // Manejo de archivos multimedia
    $mediaUploaded = false;
    $uploadErrors = [];
    
    // Subir im치genes
    if (!empty($_FILES['imagenes'])) {
        foreach ($_FILES['imagenes']['tmp_name'] as $key => $tmpName) {
            if ($_FILES['imagenes']['error'][$key] === UPLOAD_ERR_OK) {
                $nombreArchivo = uniqid() . '_' . basename($_FILES['imagenes']['name'][$key]);
                $rutaDestino = '../uploads/productos/' . $nombreArchivo;
                
                // Verificar y crear directorio si no existe
                if (!file_exists('../uploads/productos/')) {
                    mkdir('../uploads/productos/', 0777, true);
                }
                
                if (move_uploaded_file($tmpName, $rutaDestino)) {
                    $stmt = $pdo->prepare("INSERT INTO Imagenes_Productos (id_producto, url_imagen) VALUES (?, ?)");
                    $stmt->execute([$idProducto, $rutaDestino]);
                    $mediaUploaded = true;
                } else {
                    $uploadErrors[] = 'Error al subir ' . $_FILES['imagenes']['name'][$key];
                }
            }
        }
    }
    
    // Subir videos
    if (!empty($_FILES['videos'])) {
        foreach ($_FILES['videos']['tmp_name'] as $key => $tmpName) {
            if ($_FILES['videos']['error'][$key] === UPLOAD_ERR_OK) {
                $nombreArchivo = uniqid() . '_' . basename($_FILES['videos']['name'][$key]);
                $rutaDestino = '../uploads/productos/' . $nombreArchivo;
                
                if (move_uploaded_file($tmpName, $rutaDestino)) {
                    $stmt = $pdo->prepare("INSERT INTO Videos_Productos (id_producto, url_video) VALUES (?, ?)");
                    $stmt->execute([$idProducto, $rutaDestino]);
                    $mediaUploaded = true;
                } else {
                    $uploadErrors[] = 'Error al subir ' . $_FILES['videos']['name'][$key];
                }
            }
        }
    }
    
    // Respuesta exitosa
    $response = [
        'success' => true,
        'message' => $result['mensaje'],
        'productId' => $idProducto,
        'mediaUploaded' => $mediaUploaded
    ];
    
    if (!empty($uploadErrors)) {
        $response['uploadWarnings'] = $uploadErrors;
    }
    
    echo json_encode($response);

} catch (PDOException $e) {
    echo json_encode([
        'success' => false,
        'error' => 'Error en la base de datos: ' . $e->getMessage()
    ]);
} catch (Exception $e) {
    echo json_encode([
        'success' => false,
        'error' => $e->getMessage()
    ]);
}
?>